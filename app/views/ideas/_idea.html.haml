%h1= idea.title

%p
  - if idea.responses.last && idea.responses.last.state.name != "none"
    %span.label{style: "background-color: #{idea.responses.last.state.color};"}
      = idea.responses.last.state.name
    &nbsp;
  %strong score:
  %span.badge{id: "score"}= idea.score
  - if user_signed_in?
    &nbsp;&middot;&nbsp;
    %span#vote{ "data-uri" => site_idea_votes_path(site, idea) }
      - if vote
        %button.btn.btn-mini.btn-success.vote{ style: "display: none;"}
          Vote
          %i.icon-thumbs-up.icon-white
        %button.btn.btn-mini.btn-warning.vote
          Unvote
          %i.icon-thumbs-down.icon-white
      - else
        %button.btn.btn-mini.btn-warning.vote{ style: "display: none;"}
          Unvote
          %i.icon-thumbs-down.icon-white
        %button.btn.btn-mini.btn-success.vote
          Vote
          %i.icon-thumbs-up.icon-white

%div.posting{ id: "idea_#{idea.id}" }
  %p= idea.description

  %p.info
    Posted by #{link_to idea.user.name, profile_path(idea.user)}
    = distance_of_time_in_words(Time.now - idea.created_at)
    ago
  
  - if can? :destroy, idea
    = button_to "Delete", url, class: "btn btn-mini btn-danger delete", method: :delete
  
  .clearfix